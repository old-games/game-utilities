Файлы ресурсов ARCHON.PKG и TITLE.PKG игры ARCHON ULTRA состоят из блоков.
Заголовок имеется только у ARCHON.PKG. Он устроен так:
+00 DW FFFF
+02 DD смещение начала списка длин блоков
+06 DD смещение конца списка длин блоков
+0A DD -"-
+0E DW число групп блоков
+10 DW 3
+12 DD размер заголовка
+16 ... список групп блоков
+?? ... мусор
+?? ... список длин блоков
+?? ... мусор
+?? ... 1-й блок
Список групп блоков состоит из элементов. Элементы его устроены так:
+0 DB число типов блоков в группе (1, иногда 2)
+1 DB число блоков в группе
+2 DW 0 - группа в ARCHON.PKG, 20h - в TITLE.PKG
+4 DD смещение 1-го блока группы в файле OR FF000000h
+8 ... следующий элемент
Список длин блоков состоит из пакетов, по одному пакету на каждую группу.
Пакеты устроены так:
- для группы одного типа:
+0 DB тип блоков пакета (1 - графика, 2 - данные, 3 - MOD-файл)
+1 DB младший байт номера 1-го блока
+2 DW число блоков в пакете(=N)*20h OR старший байт номера
+4 DW*N размеры блоков, деленные на 4
- для группы двух типов:
+0 DB тип первых блоков пакета (1, 2 или 3)
+1 DB младший байт номера 1-го такого блока
+2 DW число таких блоков в пакете(=N1)*20h OR старший байт номера
+4 DB тип последующих блоков пакета (1, 2 или 3)
+5 DB младший байт номера 1-го такого блока
+6 DW число таких блоков в пакете(=N2)*20h OR старший байт номера
+8 DW*(N1+N2) размеры блоков, деленные на 4
Номера блоков считаются по порядку с 0 в каждом из типов по отдельности.
Блоки бывают следующих типов:
- обычный MOD-файл
- нечто непонятное:
+00 DD FFFFFFFF
+04 DW 0
+06 DW 2000h
+08 DB*1F8h непонятно что
- набор блоков двоичных данных (звук, палитры и т.п.):
+00 DD FFFFFFFF
+04 DW число блоков данных (=M)
+06 DD 0
+0A DD*M размеры блоков данных
+?? ... сами блоки данных
Блоки палитр устроены так:
+00 DB номер в палитре первого цвета блока
+01 DB номер в палитре последнего цвета блока
+02 DB*? собственно палитра
Признак блоков этого типа - их размер равен (b[+1]-b[+0])*3+5.
- набор тайлов:
+00 DD FFFFFFFF
+04 DW 0
+06 DW число тайлов (=M)
+08 DB ширина тайлов/16
+09 DB высота тайлов/16
+0A ... тела тайлов (простые битмапы)
- набор картинок:
+00 DD FFFFFFFF
+04 DW 0
+06 DW число картинок (=M) -1 OR 3000h
+08 ... дескрипторы картинок
+?? ... сами картинки
Дескриптор картинки устроен так:
+00 DD индекс картинки (OR 40000000 для сжатых, OR 20000000 для использующих
       тело другой картинки)
+04 DW смещение точки вставки слева
+06 DW смещение точки вставки сверху
+08 DW ширина картинки
+0A DW высота картинки
+0C DD смещение тела картинки от начала _своего_дескриптора_
+10 ... следующий дескриптор
Тело несжатой картинки представляет собой простой битмап.
Тело сжатой картинки состоит из строк, строки состоят из блоков строки.
Строка устроена так:
+0 DW размер
+2 ... блоки строки
Блоки строки устроены так:
- блок тени:
+0 DB 11xxxxxx
+1 DB цвет (всегда 0), по нему (X+1) точек покрываются тенью
(такие блоки используются только в специальных спрайтах теней)
- блок пропуска:
+0 DB 10xxxxxx, по нему пропускается (X+1) точек
- блок копирования:
+0 DB 01xxxxxx
+1 DB (X+1) байт, по нему они копируются на экран
- концевик:
+0 DB 0
Следует отметить, что в заголовке одного из наборов картинок содержится кусок
мусорных данных.

Только и всего...