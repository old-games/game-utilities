Файлы .IFF игры Privateer имеют теговый формат. Состоят, естественно, из теговых
блоков многих различных типов. К графике имеют отношение лишь немногие из тегов,
соответственно и графические данные содержатся лишь в части .IFF-файлов игры.
Теговые блоки состоят из заголовка и тела. Они устроены либо так:
+0 DB*4 тег (4 символа)
+4 DD длина тела блока, записанная в _обратном_ порядке (старший байт в
      _младших_ адресах)
+8 ... тело блока
либо так:
+0 DB*8 тег (8 символов)
+8 DD длина тела блока в обратном порядке
+C ... тело блока
Теговые блоки всегда выравниваются на границу слова.
К блокам, требующим специальной обработки, относятся следующие:
- блоки 'FORM' и 'xxxxFORM'
Тела этих блоков состоят опять же из теговых блоков, так что следует просто
пропустить заголовок блока, игнорируя длину тела.
- блоки 'xxxxTABL'
Тела этих блоков являются массивами двойных слов - смещений в файле (начал
разделов?). Важно, что по каждому из этих смещений в файле находится - между
блоками - двойное слово (длина очередного раздела). Так что, когда начало
очередного блока попадает на одно из перечисленных смещений, следует пропустить
перед ним 4 байта.
К графическим блокам относятся следующие:
- блоки 'SHAP', 'xxxxSHAP' (кроме 'CUBGSHAP' и 'SPRTSHAP'), 'MFDSTARG', 'GUNS',
'WEAP', 'BURN', 'GRID', 'BTTNQUAD', 'NAVI', 'NEXT' и 'MOUS' при размере тела не
менее 25 байт
Тело блоков этого типа может быть устроено по одному из 2 типов:
либо картинка на весь размер тела, либо картинка плюс блок 'FORM', содержащий
один блок 'PAL CMAP' (в этом случае в конце тела может быть 2 лишних байта).
- блок 'VSHP'
Тело блоков этого типа состоит из нескольких подряд расположенных картинок.
- блоки 'INFO' и 'ITRNINFO' в одном из вариантов, а именно:
мусорный байт плюс картинка на весь остаток размера тела.
- блок 'PAL CMAP'
Блоки этого типа встречаются только внутри блоков типа 'SHAP'. Тело их -
палитра, с RGB-компонентами, сдвинутыми на 2 влево.
- блоки 'PALT' и 'xxxxPALT' при размере тела не менее 7 байт
Тело блоков этого типа - блок палитры. Оно устроено так:
+0 DW начальный цвет
+2 DW число цветов
+4 DB*3*? RGB-компоненты цветов
Картинка, входящая в состав вышеперечисленных блоков, состоит из заголовка и
набора страниц изображения. Страницы состоят из заголовка и набора подстрок
изображения.
Заголовок картинки устроен так:
+0 DD размер картинки в файле
+4 DD смещение 1-й страницы (оно же размер заголовка); старший байт используется
      как флаг (00h-рисовать страницу без очистки,0C1h-рисовать с очисткой?)
+8 DD смещение 2-й страницы и флаг для нее
+C ... (так же для всех страниц)
+? ... 1-я страница
Заголовок страницы устроен так:
+0 DW удаление правой границы вправо от точки вставки
+2 DW удаление левой границы влево от точки вставки
+4 DW удаление верхней границы вверх от точки вставки
+6 DW удаление нижней границы вниз от точки вставки
+8 ... подстроки
Подстрока может быть устроена по одному из трех типов:
концевик:
+0 DW 0, на нем вывод изображения прекращается
простая подстрока:
+0 DW xxxxxxxxxxxxxxx0
+2 DW собственный сдвиг подстроки вправо от точки вставки (число со знаком)
+4 DW то же вниз
+6 DB (xxxxxxxxxxxxxxx) байт изображения, выводимых на экран
сложная подстрока:
+0 DW xxxxxxxxxxxxxxx1
+2 DW собственный сдвиг подстроки влево от _правого_нижнего_угла_ страницы
+4 DW то же вниз
+6 ... блоки подстроки, разворачивающиеся суммарно в (xxxxxxxxxxxxxxx) байт
       изображения
Блоки подстроки устроены так:
блок копирования:
+0 DB xxxxxxx0
+1 DB (xxxxxxx) байт изображения, по нему они выводятся на экран
блок заполнения:
+0 DB xxxxxxx1
+1 DB цвет, по нему (xxxxxxx) точек закрашиваются этим цветом

Вот, собственно, и все...