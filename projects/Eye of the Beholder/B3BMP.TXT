BMP-файл графики в Eye of the Beholder 3 и некоторых других играх фирмы SSI
состоит из заголовка и набора картинок изображения.Картинки состоят из заголовка
и тела.
Заголовок файла устроен так:
+0 DD длина файла
+4 DW число картинок в файле
+6 DD смещение 1-й картинки
+A ... (смещения для всех картинок)
Картинки могут быть устроены по одному из четырех типов.
Картинки первого типа состоят из заголовка и набора строк изображения.Строки
состоят из Y-координаты (байт,если FF, то конец картинки)и набора элементов
строки.Элемент строки состоит из заголовка и набора блоков.
Заголовок картинки устроен так:
+0 DW высота картинки
+2 DW ширина картинки
+4 ... (строки)
Строка устроена так:
+0 DB Y-координата строки (собственный сдвиг сверху); если FF,то конец картинки
+1 ... (элементы, если не конец картинки)
Элемент строки устроен так:
+0 DW младшие 15 бит X-координата элемента (собственный сдвиг слева), старший
      бит установлен, если элемент последний в строке
+2 DB длина элемента на экране
+3 DB сумма длин блоков элемента (т.е. длина элемента в файле - 4)
+4 ... (один или более блоков)
Блоки устроены так:
блок копирования:
+0 DB xxxxxxx0
+1 DB (xxxxxxx+1) байт изображения, по нему они выводятся на экран
блок заполнения:
+0 DB xxxxxxx1
+1 DB цвет , по нему (xxxxxxx+1) точек закрашиваются этим цветом
Картинки других типов встречаются только в игре Dark Sun 2.
Картинки второго типа состоят из заголовка и тела.
Заголовок картинки устроен так:
+0 DW высота картинки
+2 DW ширина картинки
+4 DB FF,'PLNR' (сигнатура типа)
+9 DB число бит на точку (BPP)
+A DB*N таблица перекодировки цвета (N=2^BPP)
+? ... (тело картинки)
Тело картинки представляет собой _битовый_ массив,BPP бит на элемент;выборка
идет со _старших_ битов и с младших адресов.При этом оно сжато RLE-методом,
работающим не с байтами,а с элементами:
DE K>0 - вывести точку K-м цветом из таблицы перекодировки;
DE 0 / DE 0 - вывести точку 0-м цветом из таблицы перекодировки;
DE 0 / DE N>0 - (N+2) раза повторить последнюю выведенную точку.
Цвет 0 - прозрачный.
Картинки третьего типа состоят из заголовка и тела.
Заголовок картинки устроен так:
+0 DW высота картинки
+2 DW ширина картинки
+4 DB FF,'PLAN' (сигнатура типа)
+9 DB число бит на точку (BPP>0)
+A DB*N таблица перекодировки цвета (N=2^BPP)
+? ... (тело картинки)
Тело картинки представляет собой битовый массив идущих подряд точек,BPP бит на
пиксел;выборка идет со старших битов и с младших адресов.
Картинки четвертого типа состоят только из заголовка.
Заголовок картинки устроен так:
+0 DW высота картинки
+2 DW ширина картинки
+4 DB FF,'PLAN' (сигнатура типа)
+9 DB 0
+A DB цвет
Картинки этого типа не содержат графических данных;для них выполняется закраска
всей их области цветом,заданным в заголовке.

Вот,собственно,и все...