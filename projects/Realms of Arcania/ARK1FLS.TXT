Графические файлы игры REALMS OF ARKANIA 1: BLADE OF DESTINY разделяются по
типам следующим образом:
- файлы заставки:
*.ULI
- анимационные:
*.BOB
- файлы персонажей:
*.CHR,*.NPC
- RLE-сжатые образы экрана:
E_GEN*.NVF
- наборы картинок:
*.NVF,*.DAT,*. (без расширения)
- LZ-сжатые картинки:
*.DAT,*.
- несжатые картинки и их наборы:
*.NVF,*.DAT,*.
Таким образом, для файлов последних трех типов точно определить их тип по их
расширению невозможно. По внутренней структуре файлов, к наборам картинок
относятся файлы:
COMPASS
TEMPICON
ATTIC
SPLASHES.DAT
HEADS.DAT
а также файлы *.NVF, кроме поименованных особо.
К LZ-сжатым картинкам относятся файлы:
- 320*200 с нормальной палитрой:
BUCH.DAT
PLAYM_US
ZUSTA_US
- 320*200 с палитрой, загружаемой с цвета 60h:
KCBACK.DAT
KCLBACK.DAT
KDBACK.DAT
KDLBACK.DAT
KLBACK.DAT
KLLBACK.DAT
KSBACK.DAT
KSLBACK.DAT
- 320*200 без палитры:
PLAYM_UK
ZUSTA_UK
- 320*140 с нормальной палитрой:
ROALOGUK.DAT
ROALOGUS.DAT
- 128*184 с нормальной палитрой:
DAELF.DAT
DDRUIDE.DAT
DFELF.DAT
DGAUKLER.DAT
DHEXE.DAT
DJAEGER.DAT
DKRIEGER.DAT
DMAGIER.DAT
DMENGE.DAT
DSTREUNE.DAT
DTHORWAL.DAT
DWELF.DAT
DZWERG.DAT
- 16*104 без палитры:
POPUP.DAT
К несжатым картинкам и их наборам относятся файлы:
ICONS         55 24*24 с палитрой, загружаемой с цвета 20h
KARTE.DAT      1 320*200 с палитрой
SKULL.NVF      -"-
SPSTAR.NVF     1 32*32 без палитры
SEX.DAT        3 16*16 без палитры
BICONS         9 24*24 без палитры
IN_HEADS.NVF  71 32*32 без палитры
Файлы персонажей устроены так:
+000 DB*730 данные персонажа
+2DA DB*1024 портрет персонажа (простой битмап 32*32)
RLE-сжатые картинки представляют собой картинки 320*200, сжатые RLE-методом:
 блок заполнения: DB 7Fh / DB счетчик / DB цвет;
 иначе байт просто копируется на экран.
LZ-сжатые картинки устроены так:
+0 DD размер файла или сигнатура 'PP20'
+4 ... тело файла
Тело файла сжато LZSS-методом в весьма идиотской реализации, для использования в
программах почти непригодной. А именно:
Тело файла используется как массив битов, причем выборка их идет начиная с
младших битов и со _старших_ адресов. Выбранные биты вдвигаются в результат
_справа_ в порядке выборки, то есть в результате они оказываются расположенными
в порядке, _обратном_ расположению в теле файла. LZSS-раскодировка идет по
следующей схеме: пусть @=размер входного файла, #-смещение в выходном буфере,
входной и выходной буфер начинаются со смещения 0. Тогда # := (по байтам)
0:[@-3]:[@-2]:[@-1], массив битов начинается с [@-5], причем байт [@-4]
содержит, сколько первых битов следует пропустить. После чего в цикле читаются
из входного потока и обрабатываются следующие битовые последовательности:
- либо 0 11 11 .... 11 ?? ...                 , либо 1
        └──┴──┴┬───┴──┘├┘└───┴─┐
            N штук     └M<>11b байты данных
 Это блок извлечения из входного потока (3*N+M) байт данных, причем _перед_
 помещением каждого байта в выходной поток, # _уменьшается_ на 1. После этого
 блока выполняется проверка, заполнен ли выходной буфер. Этого блока может не
 быть (когда 1 вместо 0 в его начале).
- после чего либо 11 k ... 111 111 .... 111 ???  , либо ?? ...
                       └┬┘└───┴───┴┬───┴───┘├─┘         ├┘ └─┴─┐
                        СNT бит    N штук   └M<>111b    X<>11b └СNT бит
 Это блок копирования строки байт. В его первом варианте, если бит k=0, то
 CNT:=7, иначе CNT:=байт по смещению 7 во входном буфер; длина копируемой строки
 равна (7*N+M+5) байт. Во втором варианте, CNT:=байт по смещению (4+X) во
 входном буфере, а длина равна (X+2). В обеих вариантах, "CNT бит" образуют
 словное смещение D, и байты извлекаются со смещения (#+D) в выходном буфере,
 затем # _уменьшается_ на 1, и только затем байт помещается по смещению #. После
 этого блока выполняется проверка, заполнен ли выходной буфер. Если нет, то цикл
 повторяется.
Раскодировка прекращается в момент заполнения выходного буфера (когда смещение #
приняло значение 0).
Распакованное тело файла представляет собой простой битмап без заголовка (т.е.,
размеры картинки в файле не содержатся), за которым может следовать палитра.
Несжатые картинки (и их наборы) представляют собой одиночные или идущие друг за
другом простые битмапы одного размера (их размер и число в файле не содержатся),
после которых может следовать палитра.
При наличии палитры, она устроена так:
+00 DW счетчик цветов
+02 DB*3 1-й цвет; 2 старших бита в байтах, насколько мне известно, игнорируются
+05 DB*3 2-й цвет
+08 ... так же для всех цветов

Только и всего...